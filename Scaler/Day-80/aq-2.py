class Solution:    def lca(self, A, B, C):        path_b = self.getPath(A, B)        path_c = self.getPath(A, C)        len_b = len(path_b)        len_c = len(path_c)        mnlen = min(len_b, len_c)        final_ans = -1        while mnlen > 0:            ub = path_b.pop()            uc = path_c.pop()            if ub.val == uc.val:                final_ans = ub.val            mnlen -= 1        return final_ans    def getPath(self, A, d):        path = []        self.checkNode(A, d, path)        return path    def checkNode(self, A, d, path):        if A == None:            return False        if A.val == d:            path.append(A)            return True        if self.checkNode(A.left, d, path) or self.checkNode(A.right, d, path):            path.append(A)            return True        return False